plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.3"

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def value = 0

        def runTasks = gradle.startParameter.taskNames
        if ('assemble' in runTasks || 'assembleRelease' in runTasks || 'aR' in runTasks) {
            value = 1
        }

        def versionMajor = 1
        def versionMinor = 0
        def versionPatch = versionProps['VERSION_PATCH'].toInteger() + value
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        def versionNumber = versionProps['VERSION_NUMBER'].toInteger() + value

        if (versionBuild > 99) {
            versionPatch++
            versionBuild = 10
        }

        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps['VERSION_NUMBER'] = versionNumber.toString()

        versionProps.store(versionPropsFile.newWriter(), null)


        defaultConfig {
            applicationId "com.asfursov.agrocom"
            minSdkVersion 26
            targetSdkVersion 29
            versionCode "${versionMajor}${versionMinor}${versionPatch}${versionBuild}".toInteger()
            versionName "${versionMajor}.${versionMinor}.${versionPatch} (${versionBuild}) Release"
            resValue "string", "initial_user", app_initial_user
            resValue "string", "initial_password", app_initial_password


            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def fileNaming = "apk"
                if (!variant.versionName.contains("debug")) {
                    outputFileName = "${fileNaming}-${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}-${variant.name}.apk"
                } else {
                    outputFileName = "${fileNaming}-debug.apk"
                }
            }
        }
    } else {
        throw new GradleException("Could not read version.properties!" + versionPropsFile.absolutePath)
    }
    buildTypes {
        debug {
            buildConfigField "Boolean", "DEBUG_MODE", "true"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    dependencies {

        implementation 'androidx.appcompat:appcompat:1.2.0'
        implementation 'com.google.android.material:material:1.3.0'
        implementation 'androidx.annotation:annotation:1.1.0'
        implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
        implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
        implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
        implementation 'androidx.navigation:navigation-fragment:2.2.2'
        implementation 'androidx.navigation:navigation-ui:2.2.2'
        implementation 'androidx.legacy:legacy-support-v4:1.0.0'
        testImplementation 'junit:junit:4.+'
        androidTestImplementation 'androidx.test.ext:junit:1.1.2'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

        implementation 'com.jakewharton:butterknife:10.2.3'
        annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'

        implementation 'com.google.android.gms:play-services-vision:11.0.2'

        implementation 'com.squareup.retrofit2:retrofit:2.4.0'
        implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    }
}